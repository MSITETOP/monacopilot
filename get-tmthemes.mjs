import {writeFile} from 'fs/promises';

import {createHighlighter} from 'shiki';

const highlighter = await createHighlighter({
  themes: [
    'andromeeda',
    'aurora-x',
    'ayu-dark',
    'catppuccin-frappe',
    'catppuccin-latte',
    'catppuccin-macchiato',
    'catppuccin-mocha',
    'dark-plus',
    'dracula',
    'dracula-soft',
    'github-dark',
    'github-dark-default',
    'github-dark-dimmed',
    'github-light',
    'github-light-default',
    'houston',
    'laserwave',
    'light-plus',
    'material-theme',
    'material-theme-darker',
    'material-theme-lighter',
    'material-theme-ocean',
    'material-theme-palenight',
    'min-dark',
    'min-light',
    'monokai',
    'night-owl',
    'nord',
    'one-dark-pro',
    'one-light',
    'poimandres',
    'red',
    'rose-pine',
    'rose-pine-dawn',
    'rose-pine-moon',
    'slack-dark',
    'slack-ochin',
    'snazzy-light',
    'solarized-dark',
    'solarized-light',
    'synthwave-84',
    'tokyo-night',
    'vesper',
    'vitesse-black',
    'vitesse-dark',
    'vitesse-light',
  ],
  langs: [
    'abap',
    'actionscript-3',
    'ada',
    'angular-html',
    'angular-ts',
    'apache',
    'apex',
    'apl',
    'applescript',
    'ara',
    'asciidoc',
    'asm',
    'astro',
    'awk',
    'ballerina',
    'bat',
    'beancount',
    'berry',
    'bibtex',
    'bicep',
    'blade',
    'c',
    'cadence',
    'clarity',
    'clojure',
    'cmake',
    'cobol',
    'codeowners',
    'codeql',
    'coffee',
    'common-lisp',
    'cpp',
    'crystal',
    'csharp',
    'css',
    'csv',
    'cue',
    'cypher',
    'd',
    'dart',
    'dax',
    'desktop',
    'diff',
    'docker',
    'dream-maker',
    'edge',
    'elixir',
    'elm',
    'emacs-lisp',
    'erb',
    'erlang',
    'fennel',
    'fish',
    'fluent',
    'fortran-fixed-form',
    'fortran-free-form',
    'fsharp',
    'gdresource',
    'gdscript',
    'gdshader',
    'genie',
    'gherkin',
    'git-commit',
    'git-rebase',
    'gleam',
    'glimmer-js',
    'glimmer-ts',
    'glsl',
    'gnuplot',
    'go',
    'graphql',
    'groovy',
    'hack',
    'haml',
    'handlebars',
    'haskell',
    'haxe',
    'hcl',
    'hjson',
    'hlsl',
    'html',
    'html-derivative',
    'http',
    'hxml',
    'hy',
    'imba',
    'ini',
    'java',
    'javascript',
    'jinja',
    'jison',
    'json',
    'json5',
    'jsonc',
    'jsonl',
    'jsonnet',
    'jssm',
    'jsx',
    'julia',
    'kotlin',
    'kusto',
    'latex',
    'less',
    'liquid',
    'log',
    'logo',
    'lua',
    'luau',
    'make',
    'markdown',
    'marko',
    'matlab',
    'mdc',
    'mdx',
    'mermaid',
    'mojo',
    'move',
    'narrat',
    'nextflow',
    'nginx',
    'nim',
    'nix',
    'nushell',
    'objective-c',
    'objective-cpp',
    'ocaml',
    'pascal',
    'perl',
    'php',
    'plsql',
    'po',
    'postcss',
    'powerquery',
    'powershell',
    'prisma',
    'prolog',
    'proto',
    'pug',
    'puppet',
    'purescript',
    'python',
    'qml',
    'qmldir',
    'qss',
    'r',
    'racket',
    'raku',
    'razor',
    'reg',
    'regexp',
    'rel',
    'riscv',
    'rst',
    'ruby',
    'rust',
    'sas',
    'sass',
    'scala',
    'scheme',
    'scss',
    'shaderlab',
    'shellscript',
    'shellsession',
    'smalltalk',
    'solidity',
    'soy',
    'sparql',
    'splunk',
    'sql',
    'ssh-config',
    'stata',
    'stylus',
    'svelte',
    'swift',
    'system-verilog',
    'systemd',
    'tasl',
    'tcl',
    'templ',
    'terraform',
    'tex',
    'toml',
    'tsv',
    'tsx',
    'turtle',
    'twig',
    'typescript',
    'typespec',
    'typst',
    'v',
    'vala',
    'vb',
    'verilog',
    'vhdl',
    'viml',
    'vue',
    'vue-html',
    'vyper',
    'wasm',
    'wenyan',
    'wgsl',
    'wikitext',
    'wolfram',
    'xml',
    'xsl',
    'yaml',
    'zenscript',
    'zig',
  ],
});

const themeIds = highlighter.getLoadedThemes();

for (const themeId of themeIds) {
  const theme = highlighter.getTheme(themeId);
  // save each theme to a file named `${themeId}.tmTheme` in the `tm` directory
  await writeFile(`tm/${themeId}.json`, JSON.stringify(theme, null, 2));
}
